/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@sprite-i-brik-name: 'sprite-i-brik';
@sprite-i-brik-x: 0px;
@sprite-i-brik-y: 0px;
@sprite-i-brik-offset-x: 0px;
@sprite-i-brik-offset-y: 0px;
@sprite-i-brik-width: 70px;
@sprite-i-brik-height: 46px;
@sprite-i-brik-total-width: 128px;
@sprite-i-brik-total-height: 101px;
@sprite-i-brik-image: '/img/sprite.png';
@sprite-i-brik: 0px 0px 0px 0px 70px 46px 128px 101px '/img/sprite.png' 'sprite-i-brik';
@sprite-i-geo-name: 'sprite-i-geo';
@sprite-i-geo-x: 0px;
@sprite-i-geo-y: 46px;
@sprite-i-geo-offset-x: 0px;
@sprite-i-geo-offset-y: -46px;
@sprite-i-geo-width: 40px;
@sprite-i-geo-height: 55px;
@sprite-i-geo-total-width: 128px;
@sprite-i-geo-total-height: 101px;
@sprite-i-geo-image: '/img/sprite.png';
@sprite-i-geo: 0px 46px 0px -46px 40px 55px 128px 101px '/img/sprite.png' 'sprite-i-geo';
@sprite-i-phone-name: 'sprite-i-phone';
@sprite-i-phone-x: 40px;
@sprite-i-phone-y: 46px;
@sprite-i-phone-offset-x: -40px;
@sprite-i-phone-offset-y: -46px;
@sprite-i-phone-width: 26px;
@sprite-i-phone-height: 25px;
@sprite-i-phone-total-width: 128px;
@sprite-i-phone-total-height: 101px;
@sprite-i-phone-image: '/img/sprite.png';
@sprite-i-phone: 40px 46px -40px -46px 26px 25px 128px 101px '/img/sprite.png' 'sprite-i-phone';
@sprite-i-rep-name: 'sprite-i-rep';
@sprite-i-rep-x: 70px;
@sprite-i-rep-y: 0px;
@sprite-i-rep-offset-x: -70px;
@sprite-i-rep-offset-y: 0px;
@sprite-i-rep-width: 58px;
@sprite-i-rep-height: 43px;
@sprite-i-rep-total-width: 128px;
@sprite-i-rep-total-height: 101px;
@sprite-i-rep-image: '/img/sprite.png';
@sprite-i-rep: 70px 0px -70px 0px 58px 43px 128px 101px '/img/sprite.png' 'sprite-i-rep';
@spritesheet-width: 128px;
@spritesheet-height: 101px;
@spritesheet-image: '/img/sprite.png';
@spritesheet-sprites: @sprite-i-brik @sprite-i-geo @sprite-i-phone @sprite-i-rep;
@spritesheet: 128px 101px '/img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
